name: Sync Spacire Blog Data

on:
  schedule:
    # Run every 30 minutes
    - cron: '*/30 * * * *'
  
  # Allow manual triggering
  workflow_dispatch:
  
  # Run on push to main branch
  push:
    branches: [ main ]

jobs:
  fetch-and-update:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          
      - name: Fetch Shopify blog data
        env:
          SHOPIFY_SHOP_DOMAIN: ${{ secrets.SHOPIFY_SHOP_DOMAIN }}
          SHOPIFY_ACCESS_TOKEN: ${{ secrets.SHOPIFY_ACCESS_TOKEN }}
        run: |
          python fetch_blog_data.py > /dev/null
          
      - name: Create simple README
        run: |
          echo "# Spacire Blog Data" > README.md
          echo "" >> README.md
          echo "**Automated Shopify blog data sync - updates every 30 minutes**" >> README.md
          echo "" >> README.md
          echo "## 📁 Files" >> README.md
          echo "" >> README.md
          echo "- **[blog_data.json](./blog_data.json)** - Complete blog metadata in JSON format" >> README.md
          echo "- Click the JSON file above to view all your blog data in GitHub's interface" >> README.md
          echo "" >> README.md
          echo "## 🔄 Automatic Updates" >> README.md
          echo "" >> README.md
          echo "This repository automatically fetches and updates blog data every 30 minutes." >> README.md
          echo "" >> README.md
          echo "Last updated: $(date)" >> README.md
          
      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add blog_data.json README.md
          
      - name: Check for changes and push
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git commit -m "Update blog data - $(date)"
            git push origin main
          else
            echo "No changes to commit"
          fi}
